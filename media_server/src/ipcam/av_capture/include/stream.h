/** ===========================================================================
* @file stream.h
*
* @path $(IPNCPATH)\multimedia\encode_stream\stream
*
* @desc
* .
* Copyright (c) Appro Photoelectron Inc.  2008
*
* Use of this software is controlled by the terms and conditions found
* in the license agreement under which this software has been supplied
*
* =========================================================================== */

#ifndef _STREAM_H_
#define _STREAM_H_

#if defined (__cplusplus)
extern "C" {
#endif

#include <rendezvous.h>
#include <Msg_Def.h>
//#include "hi_type.h"
#include "mem_mng.h"
#include "cache_mng.h"
#include "gop_lock.h"
#include "semaphore_util.h"

enum{
	STREAM_FAILURE   = -1,
	STREAM_SUCCESS   = 0
};

enum{
	STREAM_MP4 = 0,
	STREAM_MJPG ,
	STREAM_MP4_EXT ,
	STREAM_AUDIO ,
	STREAM_H264_1,
	STREAM_H264_2,
	STREAM_H264_3,
	STREAM_AUDIO_PCM
};

enum{
	STREAM_SEM_MPEG4 = 0,
	STREAM_SEM_MPEG4_EXT,
	STREAM_SEM_H264,
	STREAM_SEM_JPEG,
	STREAM_SEM_AUDIO,
	STREAM_SEM_AUDIO_PCM,
	STREAM_SEM_MEMCPY,
	STREAM_SEM_CACHECPY,
	STREAM_SEM_GOP,
	STREAM_SEM_WRITE,	
	STREAM_SEM_NUM
};

enum{
	STREAM_FEATURE_BIT_RATE1 = 0,
	STREAM_FEATURE_BIT_RATE2,
	STREAM_FEATURE_BIT_RATE3,
	STREAM_FEATURE_JPG_QUALITY,
	STREAM_FEATURE_AAC_BITRATE,
	STREAM_FEATURE_MAIN_DEWARPMODE,
	STREAM_FEATURE_3rd_DEWARPMODE,
	STREAM_FEATURE_RESOLUTION1,
	STREAM_FEATURE_RESOLUTION2,
	STREAM_FEATURE_RESOLUTION3,
	STREAM_FEATURE_RESOLUTION4,
	STREAM_FEATURE_FRAMERATE1,
	STREAM_FEATURE_FRAMERATE2,
	STREAM_FEATURE_FRAMERATE3,
	STREAM_FEATURE_FRAMERATE4,
	STREAM_FEATURE_BLC,
	STREAM_FEATURE_SATURATION,
	STREAM_FEATURE_AWB_MODE,
	STREAM_FEATURE_DAY_NIGHT,
	STREAM_FEATURE_BRIGHTNESS,
	STREAM_FEATURE_CONTRAST,
	STREAM_FEATURE_SHARPNESS,
	STREAM_FEATURE_AEW_TYPE,
	STREAM_FEATURE_AEW_PRIORITY,
	STREAM_FEATURE_ENV_50_60HZ,
	STREAM_FEATURE_BINNING_SKIP,
	STREAM_FEATURE_LOCALDISPLAY,
	STREAM_FEATURE_TSTAMPENABLE,
	STREAM_FEATURE_PTZ,
	STREAM_FEATURE_GET_PTZ_PRESET,	
	STREAM_FEATURE_GET_PTZ_PATROL,
	STREAM_FEATURE_GET_PTZ_STATUS,
	STREAM_FEATURE_SET_PTZ_PRESET,
	STREAM_FEATURE_SET_PTZ_PATROL,
	STREAM_FEATURE_MOTION,
	STREAM_FEATURE_ROICFG,
	STREAM_FEATURE_OVERLAY_IMAGE,			
	STREAM_FEATURE_PRIVACY_MASK,			
	STREAM_FEATURE_TAMPER,					
	STREAM_FEATURE_EVENT,					
	STREAM_FEATURE_M41_ADV_FEATURE,
	STREAM_FEATURE_M42_ADV_FEATURE,
	STREAM_FEATURE_JPG_ADV_FEATURE,
	STREAM_FEATURE_OSDTEXT_EN,
	STREAM_FEATURE_HIST_EN,
	STREAM_FEATURE_OSDLOGO_EN,
	STREAM_FEATURE_OSDTEXT,
	STREAM_FEATURE_FACE_SETUP,
	STREAM_FEATURE_DATETIMEPRM,
	STREAM_FEATURE_OSDPRM1,
	STREAM_FEATURE_OSDPRM2,
	STREAM_FEATURE_OSDPRM3,
	STREAM_FEATURE_CLICKNAME,
	STREAM_FEATURE_CLICKSTORAGE,
	STREAM_FEATURE_ROIPRM1,
	STREAM_FEATURE_ROIPRM2,
	STREAM_FEATURE_ROIPRM3,
	STREAM_FEATURE_ADVCODECPRM1,
	STREAM_FEATURE_ADVCODECPRM2,
	STREAM_FEATURE_ADVCODECPRM3,
	STREAM_FEATURE_OSDENABLE,
	STREAM_FEATURE_IFRAME,
	STREAM_FEATURE_MIRROR,
	STREAM_FEATURE_VNFSTATUS1,
	STREAM_FEATURE_VNFSTATUS2,
	STREAM_FEATURE_VNFSTATUS3,
	STREAM_FEATURE_AUDIO_ALARM_LEVEL,
	STREAM_FEATURE_AUDIO_ALARM_FLAG,
	STREAM_FEATURE_DYNRANGE,
	STREAM_FEATURE_WDTRESET,
//	STREAM_FEATURE_IRCUT_STATUS,
	STREAM_FEATURE_IRIS_MODE, 
	STREAM_FEATURE_WDR_MODE, 
	STREAM_FEATURE_EXPOSUREMODE, 					
	STREAM_FEATURE_EXPOSUREVALUE, 					
	STREAM_FEATURE_EXPOSUREVALUE1, 					
	STREAM_FEATURE_AGC, 					
	STREAM_FEATURE_AGC_MIN, 		
	STREAM_FEATURE_AGC1, 					
	STREAM_FEATURE_AGC_MIN1, 						
	STREAM_FEATURE_SHUTTER_TIME, 	
	STREAM_FEATURE_SHUTTER_TIME_MIN, 	
	STREAM_FEATURE_SHUTTER_TIME1, 	
	STREAM_FEATURE_SHUTTER_TIME_MIN1, 	
	STREAM_FEATURE_FLICKERLESS_MODE,
	STREAM_FEATURE_COLORBAR,
	STREAM_FEATURE_AEWB_RESET,
	STREAM_FEATURE_MOBILE_FRAMERATE,
	STREAM_FEATURE_MOBILE_RETACONTROL,
	STREAM_FEATURE_MOBILE_QUALITY,
	STREAM_FEATURE_MOBILE_BITRATE,
	STREAM_FEATURE_AUTOIRIS_ACTION,
	STREAM_FEATURE_TVOUT_ENABLE,
	STREAM_FEATURE_SET_MIRROR,
	STREAM_FEATURE_SET_AUDIO_BROADCAST_PORT,
    STREAM_FEATURE_M41_GOP, 
    STREAM_FEATURE_EWDR_MODE,
    STREAM_FEATURE_AUDIO_INVOLUME,

	STREAM_FEATURE_NUM
};

enum{
	STREAM_EXT_MP4_CIF=0,
	STREAM_EXT_JPG,
	STREAM_EXT_H264,
	STREAM_EXT_NUM
};

typedef struct _STREAM_SET{
  int	    chn;
  int	    ImageWidth;
  int	    ImageHeight;
  int		ImageWidth_Ext[STREAM_EXT_NUM];
  int		ImageHeight_Ext[STREAM_EXT_NUM];
  int		JpgQuality;
  int		Mpeg4Quality;
  int		Mem_layout;
  int       mpeg4resolution;
  int       mpeg42resolution;
  int       mpeg43resolution;
  int       liveresolution;  
  unsigned char tstampenable;					
  unsigned char osdwin;  
}	STREAM_SET;

typedef struct _STREAM_PARM{
	MEM_MNG_INFO 	MemInfo;
	int 			MemMngSemId[STREAM_SEM_NUM];
	pthread_t 		threadControl;
	Rendezvous_Obj	objRv[GOP_INDEX_NUM];
	int 			checkNewFrame[GOP_INDEX_NUM];
	int 			lockNewFrame[GOP_INDEX_NUM];
	int				IsQuit;
	int				IsPause;
	int				qid;
	int				ImageWidth;
	int				ImageHeight;
	int				ImageWidth_Ext[STREAM_EXT_NUM];
	int				ImageHeight_Ext[STREAM_EXT_NUM];
	int				JpgQuality;
	int				Mpeg4Quality;
	int             Audio_Codec; 
}	STREAM_PARM;

STREAM_PARM *stream_get_handle(void);
int stream_init( STREAM_PARM *pParm , STREAM_SET *pSet);
int stream_write(void *pAddr, int size, int frame_type ,int stream_type, unsigned int timestamp , unsigned int temporalId ,STREAM_PARM *pParm);
int stream_end(STREAM_PARM *pParm);

void Motion_setparm(ApproMotionPrm* pMotionPrm); //Set Motion Parameters,RS,20091106

void video_SetMirror(int mirror);
#if defined (__cplusplus)
}
#endif
#endif
